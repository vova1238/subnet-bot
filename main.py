# —ñ–º–ø–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –∑ —Ñ–∞–π–ª—É view.py
from view import start_home, home, location, info, subnets, hosts, sum_menu, user_dict
# —ñ–º–ø–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –∑ —Ñ–∞–π–ª—É config.py
from config import tb, bot, all_menus
# —ñ–º–ø–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –∫–ª–∞—Å—É –∑ —Ñ–∞–π–ª—É user_class.py
from user_class import User

# —ñ–º–ø–æ—Ä—Ç—É–≤–∞–Ω–Ω—è –≤–º–æ–Ω—Ç–æ–≤–∞–Ω–∏—Ö –º–æ–¥—É–ª—ñ–≤ Python
from threading import Thread
import time
from shutil import rmtree
import os
import pickle

# –§—É–Ω–∫—Ü—ñ—è —è–∫–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î –∑–∞ –æ—á–∏—â–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –∑–≥–µ–Ω–µ—Ä–æ–≤–∞–Ω–∏—Ö –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º–∏ –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ —Ä–æ–±–æ—Ç–∏
def user_cleanup(users):
    global stop_cleanup_thread
    while not stop_cleanup_thread:
        for user in users.values():
            if user.expire_time:
                if user.expire_time < time.time():
                    # print(f'Cleaning...\nTime: {time.time()}\nTime expieres: {user.expire_time}')
                    dirname = os.path.dirname(__file__)
                    path = os.path.join(dirname, 'user_data', str(user.id))
                    if os.path.exists(path):
                        try:
                            rmtree(path)
                            user.expire_time = None
                            print("File deleted")
                            break
                        except PermissionError:
                            print('Exception')
                            continue
        time.sleep(3)

# –æ–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start
@bot.message_handler(commands=['start'])
def welcome(message):
    chat_id = message.chat.id
    # Creating user instance
    user = User(chat_id)
    user_dict[chat_id] = user
    # Set menu
    user.set_menu('home')
    start_home(message)
    
# –æ–±—Ä–æ–±–Ω–∏–∫ –≤—Å—å–æ–≥–æ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É
@bot.message_handler(content_types=['text'])
def main(message):

    # –Ø–∫—â–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ –±–æ—Ç—É
    if message.chat.type == 'private':
        # –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–º—ñ–Ω–Ω–æ—ó –º–µ–Ω—é –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç—É
        if message.text in all_menus.values():
            # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ —ñ—Å–Ω—É—î –≤ —Å–ª–æ–≤–Ω–∏–∫—É
            if message.chat.id in user_dict:
                # –í–∏–∑–Ω–∞—á–µ–Ω–Ω—è –∑ —è–∫–∏–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–µ–º –≤–∑–∞—î–º–æ–¥—ñ—î –±–æ—Ç
                user = user_dict[message.chat.id]
                # –ü–æ—à—É–∫—É –∫–ª—é—á–∞ —É —Å–ª–æ–≤–Ω–∏–∫—É —Ç–∞ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –º–µ–Ω—é –¥–ª—è –æ–∫—Ä–µ–º–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
                user.set_menu(list(all_menus.keys())[list(all_menus.values()).index(message.text)])
                print(message.from_user.first_name ,'menu:', user.menu)
                

                # –ó–∞–ø—É—Å–∫ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –≤–∏–±—Ä–∞–Ω–æ–≥–æ –º–µ–Ω—é

                # –î–æ–º—ñ–≤–∫–∞
                if user.menu == 'home':
                    home(message)

                # –ú—ñ—Å—Ü–µ–∑–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è IP
                if user.menu == 'location':
                    location(message)

                # –Ü–Ω—Ñ–æ –ø—Ä–æ IP
                if user.menu == 'info':
                    info(message)

                # –†–∞—Ö—É–≤–∞—Ç–∏ –ø—ñ–¥–º–µ—Ä–µ–∂—ñ
                if user.menu == 'subnets':
                    subnets(message)

                # –†–∞—Ö—É–≤–∞—Ç–∏ —Ö–æ—Å—Ç–∏
                if user.menu == 'hosts':
                    hosts(message)

                # C—É–º—É–≤–∞–Ω–Ω—è –ø—ñ–¥–º–µ—Ä–µ–∂
                if user.menu == 'summation':
                    sum_menu(message)
            
            # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —â–µ –Ω–µ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–≤—Å—è –±–æ—Ç–æ–º
            else:
                # –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'—î–∫—Ç—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ —Ç–∞ –∑–∞–ø–∏—Å –π–æ–≥–æ —É —Å–ª–æ–≤–Ω–∏–∫ 
                user = User(message.chat.id)
                user_dict[message.chat.id] = user
                user.set_menu('home')
                # bot.send_message(message.chat.id, f'User with id {message.chat.id} - does not exist!')
                main(message)
        else:
            bot.send_message(message.chat.id, '–ù–µ–≤—ñ—Ä–Ω–∞ –∫–Ω–æ–ø–∫–∞')

# –û–±—Ä–æ–±–Ω–∏–∫ –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö –∞—É–¥—ñ–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å
@bot.message_handler(content_types=['audio','voice'])
def handle_audio(message):
	bot.send_message(message.chat.id, '–ù—ñ—á–æ–≥–æ –Ω–µ –∑—Ä–æ–∑—É–º—ñ–≤, –ø–æ–≤—Ç–æ—Ä—ñ—Ç—å –±—É–¥—å –ª–∞—Å–∫–∞ üòÇ')

# –û–±—Ä–æ–±–Ω–∏–∫ –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
@bot.message_handler(content_types=['document'])
def handle_docs(message):
	bot.send_message(message.chat.id, '–í–∏–±–∞—á—Ç–µ, –∞–ª–µ —è –Ω–µ –≤—ñ–¥–∫—Ä–∏–≤–∞—é —Ñ–∞–π–ª–∏ –∑ –Ω–µ–ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–∏—Ö –¥–∂–µ—Ä–µ–ª')

# –û–±—Ä–æ–±–Ω–∏–∫ –æ—Ç—Ä–∏–º–∞–Ω–∏—Ö —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ—ñ–π
@bot.message_handler(content_types=['photo'])
def handle_photo(message):
    bot.send_message(message.chat.id, '–î—É–∂–µ –≥–∞—Ä–Ω–æ')

# –Ø–∫—â–æ —Ñ–∞–π–ª –∑–∞–ø—É—Å–∫–∞—î—Ç—å—Å—è –Ω–∞–ø—Ä—è–º—É
if __name__ == '__main__':
    try:
        # –ó–∞–ø—É—Å–∫ –ø–æ—Ç–æ–∫—É –æ—á–∏—Å—Ç–∫–∏
        print("Pshhhhhssss... cleaning")
        stop_cleanup_thread = False
        cleanup_thread = Thread(target = user_cleanup, args=(user_dict,))
        cleanup_thread.start()

        # –í–≤—ñ–º–∫–Ω–µ–Ω–Ω—è –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É —É —Ñ–∞–π–ª "./.handlers-saves/step.save".
        # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é –≤ 2 —Å–µ–∫—É–Ω–¥–∏.
        bot.enable_save_next_step_handlers(delay=2)
        # –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫–∞ –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –∫—Ä–æ–∫—É –∑ —Ñ–∞–π–ª—É "./.handlers-saves/step.save".
        bot.load_next_step_handlers()
        # –ó–∞–ø—É—Å–∫ –ø—É–ª—ñ–Ω–≥—É –±–æ—Ç–∞
        bot.polling(none_stop=True)
        
    # –í–∏–º–∫–Ω–µ–Ω–Ω—è –±–æ—Ç–∞
    except KeyboardInterrupt:
        print('Im leaving!')
        # –ó—É–ø–∏–Ω–∫–∞ –ø–æ—Ç–æ–∫—É –æ—á–∏—Å—Ç–∫–∏
        stop_cleanup_thread = True
        
        # –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è —Å—Ç–∞–Ω—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
        with open('users.pickle', 'wb') as handle:
            pickle.dump(user_dict, handle, protocol=pickle.HIGHEST_PROTOCOL)
        print('Saved: ', user_dict)

        # –ó—É–ø–∏–Ω–∫–∞ –ø—É–ª—ñ–Ω–≥—É –±–æ—Ç–∞
        bot.stop_polling()